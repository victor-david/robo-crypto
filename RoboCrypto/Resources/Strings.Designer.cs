//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xam.Applications.RoboCrypto.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Xam.Applications.RoboCrypto.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create directory {0}.
        /// </summary>
        internal static string CreateDirectory {
            get {
                return ResourceManager.GetString("CreateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypting: {0}.
        /// </summary>
        internal static string DecryptingFile {
            get {
                return ResourceManager.GetString("DecryptingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to decrypt file.
        /// </summary>
        internal static string DecryptionFailed {
            get {
                return ResourceManager.GetString("DecryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypting: {0}.
        /// </summary>
        internal static string EncryptingFile {
            get {
                return ResourceManager.GetString("EncryptingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to encrypt file {0}.
        /// </summary>
        internal static string EncryptionFailed {
            get {
                return ResourceManager.GetString("EncryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create header for {0}. Source file name is too long..
        /// </summary>
        internal static string HeaderCreationFailed {
            get {
                return ResourceManager.GetString("HeaderCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The meta data signature is invalid.
        /// </summary>
        internal static string InvalidMetadataSignature {
            get {
                return ResourceManager.GetString("InvalidMetadataSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key file does not exist.
        /// </summary>
        internal static string KeyFileDoesNotExist {
            get {
                return ResourceManager.GetString("KeyFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key in the key file is too short.
        /// </summary>
        internal static string KeyIsTooShort {
            get {
                return ResourceManager.GetString("KeyIsTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough arguments, see usage.
        /// </summary>
        internal static string NotEnoughArguments {
            get {
                return ResourceManager.GetString("NotEnoughArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation may only be applied at the root node.
        /// </summary>
        internal static string OperationMustBeRoot {
            get {
                return ResourceManager.GetString("OperationMustBeRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove directory {0}.
        /// </summary>
        internal static string RemoveDirectory {
            get {
                return ResourceManager.GetString("RemoveDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove file {0}.
        /// </summary>
        internal static string RemoveFile {
            get {
                return ResourceManager.GetString("RemoveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring directory {0}.
        /// </summary>
        internal static string RestoringDirectory {
            get {
                return ResourceManager.GetString("RestoringDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving decrypted file: {0}.
        /// </summary>
        internal static string SavingDecryptedFile {
            get {
                return ResourceManager.GetString("SavingDecryptedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving encrypted file: {0}.
        /// </summary>
        internal static string SavingEncryptedFile {
            get {
                return ResourceManager.GetString("SavingEncryptedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source and target directories cannot be within one another.
        /// </summary>
        internal static string SourceAndTargetNested {
            get {
                return ResourceManager.GetString("SourceAndTargetNested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source and Target are the same, that wouldn&apos;t work out too well.
        /// </summary>
        internal static string SourceAndTargetSame {
            get {
                return ResourceManager.GetString("SourceAndTargetSame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source is not a directory.
        /// </summary>
        internal static string SourceNotDirectory {
            get {
                return ResourceManager.GetString("SourceNotDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target is not a directory.
        /// </summary>
        internal static string TargetNotDirectory {
            get {
                return ResourceManager.GetString("TargetNotDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target directory is not empty. It must be empty to perform a decryption operation..
        /// </summary>
        internal static string TargetNotEmpty {
            get {
                return ResourceManager.GetString("TargetNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target for this source ({0}) was not found.
        /// </summary>
        internal static string TargetNotFound {
            get {
                return ResourceManager.GetString("TargetNotFound", resourceCulture);
            }
        }
    }
}
